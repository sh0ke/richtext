{"version":3,"file":"ej2-angular-richtexteditor.js","sources":["~/@syncfusion/ej2-angular-richtexteditor/ej2-angular-richtexteditor.ts","~/@syncfusion/ej2-angular-richtexteditor/src/rich-text-editor/richtexteditor-all.module.ts","~/@syncfusion/ej2-angular-richtexteditor/src/rich-text-editor/richtexteditor.module.ts","~/@syncfusion/ej2-angular-richtexteditor/src/rich-text-editor/richtexteditor.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {RichTextEditorComponent,RichTextEditorModule,RichTextEditorAllModule,ToolbarService,LinkService,ImageService,CountService,QuickToolbarService,HtmlEditorService,MarkdownEditorService,TableService,PasteCleanupService,ResizeService,FileManagerService,Toolbar,KeyboardEventArgs,KeyboardEvents,BaseToolbar,BaseQuickToolbar,QuickToolbar,Count,ColorPickerInput,MarkdownToolbarStatus,ExecCommandCallBack,ToolbarAction,MarkdownEditor,HtmlEditor,PasteCleanup,Resize,DropDownButtons,FileManager,FullScreen,setAttributes,HtmlToolbarStatus,XhtmlValidation,HTMLFormatter,Formatter,MarkdownFormatter,ContentRender,Render,ToolbarRenderer,Link,Image,ViewSource,Table,DialogRenderer,IframeContentRender,MarkdownRender,PopupRenderer,RichTextEditor,RichTextEditorModel,RenderType,ActionOnScroll,ToolbarType,ToolbarItems,IRichTextEditor,IRenderer,NotifyArgs,IItemCollectionArgs,ITouchData,IColorPickerModel,IColorPickerEventArgs,IDropDownItem,IDropDownClickArgs,IColorPickerRenderArgs,IImageNotifyArgs,IImageCommandsArgs,ImageDragEvent,ImageDropEventArgs,ILinkCommandsArgs,ITableCommandsArgs,ITableArgs,ITableNotifyArgs,IEditorModel,IToolbarItems,IToolbarItemModel,IToolbarOptions,IToolbarSettings,IToolbarRenderOptions,IDropDownModel,IToolsItems,IToolsItemConfigs,IDropDownItemModel,ActionCompleteEventArgs,ActionBeginEventArgs,PrintEventArgs,IShowPopupArgs,IUpdateItemsModel,IDropDownRenderArgs,IShowQuickTBarOptions,IQuickToolbarOptions,BeforeQuickToolbarOpenArgs,AfterImageDeleteEventArgs,QuickToolbarEventArgs,IAdapterProcess,IFormatter,IHtmlFormatterModel,IMarkdownFormatterModel,IFontProperties,IFormatProperties,OffsetPosition,ResizeArgs,BeforeSanitizeHtmlArgs,SanitizeSelectors,ExecuteCommandOption,SanitizeRemoveAttrs,ISetToolbarStatusArgs,ChangeEventArgs,DialogOpenEventArgs,DialogCloseEventArgs,ImageSuccessEventArgs,ImageFailedEventArgs,ResponseEventArgs,DestroyedEventArgs,PasteCleanupArgs,BlurEventArgs,ToolbarClickEventArgs,FocusEventArgs,ColorModeType,IColorProperties,IExecutionGroup,ImageUploadingEventArgs,executeGroup,CommandName,StatusArgs,ToolbarStatusEventArgs,created,destroyed,load,initialLoad,contentChanged,initialEnd,iframeMouseDown,destroy,toolbarClick,toolbarRefresh,refreshBegin,toolbarUpdated,bindOnEnd,renderColorPicker,htmlToolbarClick,markdownToolbarClick,destroyColorPicker,modelChanged,keyUp,keyDown,mouseUp,toolbarCreated,toolbarRenderComplete,enableFullScreen,disableFullScreen,dropDownSelect,beforeDropDownItemRender,execCommandCallBack,imageToolbarAction,linkToolbarAction,windowResize,resizeStart,onResize,resizeStop,undo,redo,insertLink,unLink,editLink,openLink,actionBegin,actionComplete,updatedToolbarStatus,actionSuccess,updateToolbarItem,insertImage,insertCompleted,imageLeft,imageRight,imageCenter,imageBreak,imageInline,imageLink,imageAlt,imageDelete,imageCaption,imageSize,sourceCode,updateSource,toolbarOpen,beforeDropDownOpen,selectionSave,selectionRestore,expandPopupClick,count,contentFocus,contentBlur,mouseDown,sourceCodeMouseDown,editAreaClick,scroll,contentscroll,colorPickerChanged,tableColorPickerChanged,focusChange,selectAll,selectRange,getSelectedHtml,renderInlineToolbar,paste,imgModule,rtlMode,createTable,docClick,tableToolbarAction,checkUndo,readOnlyMode,pasteClean,beforeDialogOpen,dialogOpen,beforeDialogClose,dialogClose,beforeQuickToolbarOpen,quickToolbarOpen,quickToolbarClose,popupHide,imageSelected,imageUploading,imageUploadSuccess,imageUploadFailed,imageRemoving,afterImageDelete,drop,xhtmlValidation,beforeImageUpload,resizeInitialized,renderFileManager,beforeImageDrop,dynamicModule,beforePasteCleanup,afterPasteCleanup,updateTbItemsStatus,CLS_RTE,CLS_RTL,CLS_CONTENT,CLS_DISABLED,CLS_SCRIPT_SHEET,CLS_STYLE_SHEET,CLS_TOOLBAR,CLS_TB_FIXED,CLS_TB_FLOAT,CLS_TB_ABS_FLOAT,CLS_INLINE,CLS_TB_INLINE,CLS_RTE_EXPAND_TB,CLS_FULL_SCREEN,CLS_QUICK_TB,CLS_POP,CLS_TB_STATIC,CLS_QUICK_POP,CLS_QUICK_DROPDOWN,CLS_IMAGE_POP,CLS_INLINE_POP,CLS_INLINE_DROPDOWN,CLS_DROPDOWN_POPUP,CLS_DROPDOWN_ICONS,CLS_DROPDOWN_ITEMS,CLS_DROPDOWN_BTN,CLS_RTE_CONTENT,CLS_TB_ITEM,CLS_TB_EXTENDED,CLS_TB_WRAP,CLS_POPUP,CLS_SEPARATOR,CLS_MINIMIZE,CLS_MAXIMIZE,CLS_BACK,CLS_SHOW,CLS_HIDE,CLS_VISIBLE,CLS_FOCUS,CLS_RM_WHITE_SPACE,CLS_IMGRIGHT,CLS_IMGLEFT,CLS_IMGCENTER,CLS_IMGBREAK,CLS_CAPTION,CLS_RTE_CAPTION,CLS_CAPINLINE,CLS_IMGINLINE,CLS_COUNT,CLS_WARNING,CLS_ERROR,CLS_ICONS,CLS_ACTIVE,CLS_EXPAND_OPEN,CLS_RTE_ELEMENTS,CLS_TB_BTN,CLS_HR_SEPARATOR,CLS_TB_IOS_FIX,CLS_FORMATS_TB_BTN,CLS_FONT_NAME_TB_BTN,CLS_FONT_SIZE_TB_BTN,CLS_FONT_COLOR_TARGET,CLS_BACKGROUND_COLOR_TARGET,CLS_COLOR_CONTENT,CLS_FONT_COLOR_DROPDOWN,CLS_BACKGROUND_COLOR_DROPDOWN,CLS_COLOR_PALETTE,CLS_FONT_COLOR_PICKER,CLS_BACKGROUND_COLOR_PICKER,CLS_RTE_READONLY,CLS_TABLE_SEL,CLS_TB_DASH_BOR,CLS_TB_ALT_BOR,CLS_TB_COL_RES,CLS_TB_ROW_RES,CLS_TB_BOX_RES,CLS_RTE_HIDDEN,CLS_RTE_PASTE_KEEP_FORMAT,CLS_RTE_PASTE_REMOVE_FORMAT,CLS_RTE_PASTE_PLAIN_FORMAT,CLS_RTE_PASTE_OK,CLS_RTE_PASTE_CANCEL,CLS_RTE_DIALOG_MIN_HEIGHT,CLS_RTE_RES_HANDLE,CLS_RTE_RES_EAST,CLS_RTE_IMAGE,CLS_RESIZE,CLS_IMG_FOCUS,CLS_RTE_DRAG_IMAGE,CLS_RTE_UPLOAD_POPUP,CLS_POPUP_OPEN,CLS_IMG_RESIZE,CLS_DROPAREA,CLS_IMG_INNER,CLS_UPLOAD_FILES,CLS_RTE_DIALOG_UPLOAD,CLS_RTE_RES_CNT,CLS_CUSTOM_TILE,CLS_NOCOLOR_ITEM,CLS_TABLE,CLS_TABLE_BORDER,CLS_RTE_TABLE_RESIZE,CLS_RTE_FIXED_TB_EXPAND,CLS_RTE_TB_ENABLED,getIndex,hasClass,getDropDownValue,isIDevice,getFormattedFontSize,pageYOffset,getTooltipText,setToolbarStatus,getCollection,getTBarItemsIndex,updateUndoRedoStatus,dispatchEvent,parseHtml,getTextNodesUnder,toObjectLowerCase,getEditValue,updateTextNode,isEditableValueEmpty,decode,sanitizeHelper,convertToBlob,getLocaleFontFormat,updateDropDownFontFormatLocale,ServiceLocator,RendererFactory,ToolbarSettingsModel,ImageSettingsModel,FileManagerSettingsModel,TableSettingsModel,QuickToolbarSettingsModel,PasteCleanupSettingsModel,FontFamilyModel,FontSizeModel,FormatModel,FontColorModel,BackgroundColorModel,ResourcesModel,IFrameSettingsModel,InlineModeModel,EditorManager,ICommandModel,IHtmlSubCommands,IKeyboardActionArgs,IHtmlItem,IHtmlItemArgs,IHtmlUndoRedoData,IHtmlKeyboardEvent,IMAGE,TABLE,LINK,INSERT_ROW,INSERT_COLUMN,DELETEROW,DELETECOLUMN,REMOVETABLE,TABLEHEADER,TABLE_VERTICAL_ALIGN,TABLE_MERGE,TABLE_VERTICAL_SPLIT,TABLE_HORIZONTAL_SPLIT,TABLE_MOVE,ALIGNMENT_TYPE,INDENT_TYPE,DEFAULT_TAG,BLOCK_TAGS,IGNORE_BLOCK_TAGS,TABLE_BLOCK_TAGS,SELECTION_TYPE,INSERTHTML_TYPE,INSERT_TEXT_TYPE,CLEAR_TYPE,EditorExecCommand,CLASS_IMAGE_RIGHT,CLASS_IMAGE_LEFT,CLASS_IMAGE_CENTER,CLASS_IMAGE_BREAK,CLASS_CAPTION,CLASS_RTE_CAPTION,CLASS_CAPTION_INLINE,CLASS_IMAGE_INLINE,Lists,markerClassName,DOMNode,Alignments,Indents,Formats,LinkCommand,InsertMethods,InsertTextExec,InsertHtmlExec,InsertHtml,IsFormatted,MsWordPaste,NodeCutter,ImageCommand,SelectionCommands,SelectionBasedExec,ClearFormatExec,UndoRedoManager,TableCommand,statusCollection,ToolbarStatus,NodeSelection,MarkdownParser,IMDFormats,IMDTable,MarkdownTableFormat,ISelectedLines,IMarkdownParserModel,IMarkdownSubCommands,MarkdownUndoRedoData,IMarkdownItem,IMarkdownItemArgs,IMDKeyboardEvent,LISTS_COMMAND,selectionCommand,LINK_COMMAND,CLEAR_COMMAND,MD_TABLE,MarkdownExecCommand,ClearFormat,MDLists,MDFormats,MarkdownSelection,UndoRedoCommands,MDSelectionFormats,MDLink,MDTable,markdownFormatTags,markdownSelectionTags,markdownListsTags,htmlKeyConfig,markdownKeyConfig,pasteCleanupGroupingTags,listConversionFilters,selfClosingTags,KEY_DOWN,ACTION,FORMAT_TYPE,KEY_DOWN_HANDLER,LIST_TYPE,KEY_UP_HANDLER,KEY_UP,MODEL_CHANGED_PLUGIN,MODEL_CHANGED,MS_WORD_CLEANUP_PLUGIN,MS_WORD_CLEANUP,IMarkdownFormatterCallBack,IHtmlFormatterCallBack,IMarkdownToolbarStatus,IUndoCallBack,IToolbarStatus,EditorMode,SaveFormat} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/rich-text-editor/richtexteditor.component';","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RichTextEditorComponent } from './richtexteditor.component';\nimport { RichTextEditorModule } from './richtexteditor.module';\nimport {Toolbar, Link, Image, Count, QuickToolbar, HtmlEditor, MarkdownEditor, Table, PasteCleanup, Resize, FileManager} from '@syncfusion/ej2-richtexteditor';\n\n\nexport const /** @type {?} */ ToolbarService: ValueProvider = { provide: 'RichTextEditorToolbar', useValue: Toolbar};\nexport const /** @type {?} */ LinkService: ValueProvider = { provide: 'RichTextEditorLink', useValue: Link};\nexport const /** @type {?} */ ImageService: ValueProvider = { provide: 'RichTextEditorImage', useValue: Image};\nexport const /** @type {?} */ CountService: ValueProvider = { provide: 'RichTextEditorCount', useValue: Count};\nexport const /** @type {?} */ QuickToolbarService: ValueProvider = { provide: 'RichTextEditorQuickToolbar', useValue: QuickToolbar};\nexport const /** @type {?} */ HtmlEditorService: ValueProvider = { provide: 'RichTextEditorHtmlEditor', useValue: HtmlEditor};\nexport const /** @type {?} */ MarkdownEditorService: ValueProvider = { provide: 'RichTextEditorMarkdownEditor', useValue: MarkdownEditor};\nexport const /** @type {?} */ TableService: ValueProvider = { provide: 'RichTextEditorTable', useValue: Table};\nexport const /** @type {?} */ PasteCleanupService: ValueProvider = { provide: 'RichTextEditorPasteCleanup', useValue: PasteCleanup};\nexport const /** @type {?} */ ResizeService: ValueProvider = { provide: 'RichTextEditorResize', useValue: Resize};\nexport const /** @type {?} */ FileManagerService: ValueProvider = { provide: 'RichTextEditorFileManager', useValue: FileManager};\n/**\n * NgModule definition for the RichTextEditor component with providers.\n */\nexport class RichTextEditorAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, RichTextEditorModule],\n    exports: [\n        RichTextEditorModule\n    ],\n    providers:[\n        ToolbarService,\n        LinkService,\n        ImageService,\n        CountService,\n        QuickToolbarService,\n        HtmlEditorService,\n        MarkdownEditorService,\n        TableService,\n        PasteCleanupService,\n        ResizeService,\n        FileManagerService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RichTextEditorAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRichTextEditorAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRichTextEditorAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RichTextEditorComponent } from './richtexteditor.component';\n/**\n * NgModule definition for the RichTextEditor component.\n */\nexport class RichTextEditorModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        RichTextEditorComponent\n    ],\n    exports: [\n        RichTextEditorComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RichTextEditorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRichTextEditorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRichTextEditorModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ValueProvider, Renderer2, Injector, ChangeDetectionStrategy, forwardRef, ContentChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, FormBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { RichTextEditor } from '@syncfusion/ej2-richtexteditor';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nexport const /** @type {?} */ inputs: string[] = ['autoSaveOnIdle','backgroundColor','cssClass','editorMode','enableAutoUrl','enableHtmlEncode','enableHtmlSanitizer','enablePersistence','enableResize','enableRtl','enableTabKey','enableXhtml','enabled','fileManagerSettings','floatingToolbarOffset','fontColor','fontFamily','fontSize','format','formatter','height','htmlAttributes','iframeSettings','inlineMode','insertImageSettings','keyConfig','locale','maxLength','pasteCleanupSettings','placeholder','quickToolbarSettings','readonly','saveInterval','showCharCount','tableSettings','toolbarSettings','undoRedoSteps','undoRedoTimer','value','valueTemplate','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','actionComplete','afterImageDelete','afterPasteCleanup','beforeDialogClose','beforeDialogOpen','beforeImageDrop','beforeImageUpload','beforePasteCleanup','beforeQuickToolbarOpen','beforeSanitizeHtml','blur','change','created','destroyed','dialogClose','dialogOpen','focus','imageRemoving','imageSelected','imageUploadFailed','imageUploadSuccess','imageUploading','quickToolbarClose','quickToolbarOpen','resizeStart','resizeStop','resizing','toolbarClick','toolbarStatusUpdate','updatedToolbarStatus','valueChange'];\nexport const /** @type {?} */ twoWays: string[] = ['value'];\n/**\n * `ejs-richtexteditor` represents the Angular richtexteditor Component.\n * ```html\n * <ejs-richtexteditor></ejs-richtexteditor>\n * ```\n */\n@ComponentMixins([ComponentBase, FormBase])\nexport class RichTextEditorComponent extends RichTextEditor implements IComponentBase {\npublic formCompContext : any;\npublic formContext : any;\npublic tagObjects: any;\npublic valueChange: any;\n/**\n * Accepts the template design and assigns it as RichTextEditor’s content. \n * The built-in template engine which provides options to compile template string into a executable function. \n * For EX: We have expression evolution as like ES6 expression string literals\n * \n * {% codeBlock src='rich-text-editor/value-template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n */\n@Template()\n    public valueTemplate: any;\nprivate skipFromEvent:boolean = true;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('RichTextEditorToolbar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorLink');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorImage');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorCount');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorQuickToolbar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorHtmlEditor');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorMarkdownEditor');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorTable');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorPasteCleanup');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorResize');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('RichTextEditorFileManager');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.formContext  = new FormBase();\n        this.formCompContext  = new ComponentBase();\n    }\n/**\n * @param {?} registerFunction\n * @return {?}\n */\npublic registerOnChange(registerFunction: (_: any) => void): void {\n    }\n/**\n * @param {?} registerFunction\n * @return {?}\n */\npublic registerOnTouched(registerFunction: () => void): void {\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value: any): void {\n    }\n/**\n * @param {?} disabled\n * @return {?}\n */\npublic setDisabledState(disabled: boolean): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.formCompContext.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.formContext.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.formCompContext.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        \n        this.formCompContext.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-richtexteditor',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RichTextEditorComponent),\n            multi: true\n        }\n    ],\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valueTemplate': [{ type: ContentChild, args: ['valueTemplate', ] },],\n};\n}\n\nfunction RichTextEditorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRichTextEditorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRichTextEditorComponent.ctorParameters;\n/** @type {?} */\nRichTextEditorComponent.propDecorators;\n/** @type {?} */\nRichTextEditorComponent.prototype.formCompContext;\n/** @type {?} */\nRichTextEditorComponent.prototype.formContext;\n/** @type {?} */\nRichTextEditorComponent.prototype.tagObjects;\n/** @type {?} */\nRichTextEditorComponent.prototype.valueChange;\n/**\n * Accepts the template design and assigns it as RichTextEditor’s content. \n * The built-in template engine which provides options to compile template string into a executable function. \n * For EX: We have expression evolution as like ES6 expression string literals\n * \n * {% codeBlock src='rich-text-editor/value-template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @type {?}\n */\nRichTextEditorComponent.prototype.valueTemplate;\n/** @type {?} */\nRichTextEditorComponent.prototype.skipFromEvent;\n/** @type {?} */\nRichTextEditorComponent.prototype.registerEvents;\n/** @type {?} */\nRichTextEditorComponent.prototype.addTwoWay;\n/** @type {?} */\nRichTextEditorComponent.prototype.ngEle;\n/** @type {?} */\nRichTextEditorComponent.prototype.srenderer;\n/** @type {?} */\nRichTextEditorComponent.prototype.viewContainerRef;\n/** @type {?} */\nRichTextEditorComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}
